// class Solution {
//     public int countWords(String[] words1, String[] words2) {
//         HashMap<String, Integer> map1 = new HashMap<>();
//         HashMap<String, Integer> map2 = new HashMap<>();
//         int c = 0;
//         int small = words1.length < words2.length ? words1.length : words2.length;
//         for(int i=0; i<words1.length; i++){
//             map1.put(words1[i], map1.getOrDefault(words1[i],0)+1);
//         }
//         for(int i=0; i<words2.length; i++){
//             map2.put(words2[i], map2.getOrDefault(words2[i],0)+1);
//         }
//         for(int i=0; i<small; i++){
//             String s = words2[i];
//             if(map1.containsKey(s)){
//                 if(map1.get(s) == 1 && map2.get(s) == 1){
//                     c++;
//                 }
//             }
//         }
//         return c;
//     }
// }


class Solution {
    public int countWords(String[] words1, String[] words2) {
        HashMap<String,Integer> map1=new HashMap<>();
        HashMap<String,Integer> map2=new HashMap<>();
        int c=0;
        for(int i=0;i<words1.length;i++)
        {
            String s=words1[i];
            map1.put(s,map1.getOrDefault(s,0)+1);
        }
         for(int i=0;i<words2.length;i++)
        {
            String s=words2[i];
            map2.put(s,map2.getOrDefault(s,0)+1);
        }
        for(String key:map1.keySet())
        {
            if(map2.containsKey(key) && map1.get(key)==1 && map2.get(key)==1)
            {
                c++;
            }
        }
        return c;
    }
}

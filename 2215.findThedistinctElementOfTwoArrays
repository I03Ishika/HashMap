class Solution {
    public List<List<Integer>> findDifference(int[] nums1, int[] nums2) {
        List<List<Integer>> arr = new ArrayList<>();
        List<Integer> l1 = new ArrayList<>();
        List<Integer> l2 = new ArrayList<>();
        HashMap<Integer, Integer> map1 = new HashMap<>();
        HashMap<Integer, Integer> map2 = new HashMap<>();
        Arrays.sort(nums1);
        Arrays.sort(nums2);

        for(int i=0; i<nums1.length; i++){
            map1.put(nums1[i], map1.getOrDefault(nums1[i],0)+1);
        }
        for(int i=0; i<nums2.length; i++){
            map2.put(nums2[i], map2.getOrDefault(nums2[i],0)+1);
        }
        for(int i=0; i<nums1.length; i++){
            if(i == nums1.length-1 && !map2.containsKey(nums1[i])){
                l1.add(nums1[i]);
            }else if(!map2.containsKey(nums1[i]) && nums1[i+1]!=nums1[i]){
                l1.add(nums1[i]);
            }
        }
        for(int i=0; i<nums2.length; i++){
            if(i == nums2.length-1 && !map1.containsKey(nums2[i])){
                l2.add(nums2[i]);
            }else if(!map1.containsKey(nums2[i]) && nums2[i+1]!=nums2[i]){
                l2.add(nums2[i]);
            }
        }
        arr.add(l1);
        arr.add(l2);
        
    return arr;
    }
}
